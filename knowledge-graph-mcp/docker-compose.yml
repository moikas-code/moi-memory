version: '3.8'

services:
  knowledge-graph-mcp:
    build: .
    container_name: knowledge-graph-mcp
    environment:
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=knowledge-graph-2024
      - REDIS_URI=redis://redis:6379
      - RUST_LOG=${RUST_LOG:-info}
      - MCP_PORT=${MCP_PORT:-stdio}
    volumes:
      - ./workspace:/workspace:ro
      - ./config:/config:ro
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    stdin_open: true
    tty: true
    networks:
      - knowledge-graph-net

  neo4j:
    image: neo4j:5.15-community
    container_name: knowledge-graph-neo4j
    environment:
      - NEO4J_AUTH=neo4j/knowledge-graph-2024
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_memory_heap_initial__size=512M
      - NEO4J_dbms_memory_heap_max__size=1G
    ports:
      - "7474:7474"  # Neo4j Browser
      - "7687:7687"  # Bolt protocol
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - knowledge-graph-net

  redis:
    image: redis:7-alpine
    container_name: knowledge-graph-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - knowledge-graph-net

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  redis_data:
    driver: local

networks:
  knowledge-graph-net:
    driver: bridge